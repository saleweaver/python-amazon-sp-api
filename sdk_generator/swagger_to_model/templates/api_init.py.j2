"""
Generated API client package from Swagger/OpenAPI specification.
This file was auto-generated. Do not edit manually.
"""

import importlib
import sys
from typing import TYPE_CHECKING

{% if imports %}
# Static imports for type checkers/IDEs
if TYPE_CHECKING:
    {% for im in imports %}
    from .{{ im.module }} import {{ im.name }}
    {% endfor %}

# Public API
__all__ = [
    {% for im in imports %}
    "{{ im.name }}",
    {% endfor %}
]

# Mapping of name to submodule path
_client_map = {
    {% for im in imports %}
    "{{ im.name }}": "{{ im.module }}",
    {% endfor %}
}

def __getattr__(name: str):
    """
    Lazy-load API client classes on first access.
    """
    try:
        module_path = _client_map[name]
    except KeyError:
        raise AttributeError(f"module {__name__!r} has no attribute {name!r}")
    module = importlib.import_module(f".{module_path}", __name__)
    value = getattr(module, name)
    setattr(sys.modules[__name__], name, value)
    return value

def __dir__():
    return __all__
{% endif %}